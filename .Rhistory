library(bpaR)
?bpar
??bpar
library(bpaR)
x <- 3
x %>% str
library(bpaR)
x %>% str
library(bpaR)
x %>% str
library(bpaR)
x %>% str
?magrittr
library(tidyverse)
x %>% str
library(bpaR)
x %>% str
library(bpaR)
x %>% str
library(bpaR)
x %>% str
library(bupaR)
library(roxygen2)
library(bupaR)
library(dplyr)
?dplyr
library(bupaR)
install.packages("bupaR")
library(bupaR)
?bupaR
library(bupaR)
?search
search()
library(bupaR)
remove.packages("edeaR")
library(bupaR)
search()
library(bupaR)
search()
library(bupaR)
require(dplyr)
library(bupaR)
search
search()
install.packages("edeaR")
search()
library(bupaR)
search
search()
library(bupaR)
?eventlog
library(bupaR)
?eventlog
library(bupaR)
?eventlog
library(bupaR)
?ieventlog
?eventlog
ieventlog()
install.packages("miniUI")
library(bupaR)
ieventlog()
library(bupaR)
ieventlog()
library(bupaR)
ieventlog()
library(bupaR)
ieventlog()
library(bupaR)
library(miniUI)
source('C:/Users/lucp8407/Google Drive/My UH/R workspace/bupaR/R/eventlog.R', echo=TRUE)
library(bupaR)
?.onAttach
library(bupaR)
?sample_n
library(bupaR)
?bupaR
library(bupaR)
??group_by
library(bupaR)
gender
qou(gender)
quo(gender)
!!gender
gender
as.symbol(gender)
library(bupaR)
mapping <- mapping(patients)
mapping
groups <- "patient"
map(groups, ~.x %in% mapping)
library(purrr)
map(groups, ~.x %in% mapping)
groups <- c("patient", "gender")
map(groups, ~.x %in% mapping)
names(mapping)
map(groups, names(mapping)[~.x %in% mapping])
map(groups, ~names(mapping)[.x %in% mapping])
map(groups, names(mapping)[~.x == mapping])
map(groups, ~names(mapping)[.x == mapping])
groups <- c("patient","gender","time")
map(groups, ~names(mapping)[.x == mapping])
map(groups, ~names(mapping)[.x == mapping]) %>% as.character()
map(groups, ~names(mapping)[.x == mapping]) %>%
.[lengths(.)>0]
map(groups, ~names(mapping)[.x == mapping]) %>%
.[lengths(.)>0] %>%
as.character()
if(length(t) > 0) {
warning(glue("Grouping includes mapped variables {paste(t, collapse = \",\"}"))
}
map(groups, ~names(mapping)[.x == mapping]) %>%
.[lengths(.)>0] %>%
as.character() -> t
if(length(t) > 0) {
warning(glue::glue("Grouping includes mapped variables {paste(t, collapse = \",\"}"))
}
glue::glue("test {t}")
glue::glue("test {paste(t, collapse = ",")"}")
glue::glue("test {paste(t, collapse = \",\")}")
warning(glue::glue("Grouping includes mapped variables {paste(t, collapse = \",\"}"))
if(length(t) > 0) {
warning(glue::glue("Grouping includes mapped variables {paste(t, collapse = \",\")}"))
}
warning(glue::glue("Grouping includes mapped variables {paste(t, collapse = \", \")}.
Might produce unexpected behavior. Use provided analysis levels instead."))
library(bupaR)
devtools::load_all(".")
library(bupaR)
install.packages("processmonitR")
library(processmonitR)
sepsis
library(bupaR)
sepsis %>% resource_dashboard()
sepsis %>% activity_dashboard()
sepsis %>% performance_dashboard()
patients %>% performance_dashboard()
patients %>% rework_dashboard()
sepsis %>% rework_dashboard()
sepsis %>% resource_dashboard()
library(bupaR)
